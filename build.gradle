
apply plugin: 'java'
apply plugin: 'war'

repositories {
    jcenter()
}

dependencies {
    compile 'org.springframework:spring-context:4.3.3.RELEASE'
    compile 'org.springframework:spring-web:4.3.3.RELEASE'
    compile 'org.springframework:spring-webmvc:4.3.3.RELEASE'
    compile 'org.springframework:spring-jdbc:4.3.3.RELEASE'
    compile 'org.springframework.security:spring-security-web:4.2.7.RELEASE'
    compile 'org.springframework.security:spring-security-config:4.2.7.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
    compile 'commons-fileupload:commons-fileupload:1.3.1'
    compile 'io.jsonwebtoken:jjwt:0.9.0'

    compile 'org.hibernate:hibernate-core:4.3.11.Final'
    compile 'org.springframework:spring-orm:4.3.3.RELEASE'
    compile 'org.postgresql:postgresql:9.4.1212'
    compile 'com.thetransactioncompany:cors-filter:2.6'

    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile 'javax.servlet:jstl:1.2'
    compile 'com.h2database:h2:1.3.176'

    testCompile 'junit:junit:4.12'
}

ext.angularDirName = "anglr"
ext.angularDir = "${project.rootDir}/${angularDirName}"
ext.os = System.properties['os.name'].toLowerCase()
ext.tomcatHome = System.env['CATALINA_HOME']
ext.webContext = 'drill'
ext.servContext = 'lang'

task buildAngular(type:Exec) {
    workingDir angularDir
    if (os.contains('windows')) {
        commandLine 'ng.cmd', 'build', '--prod'
    }
    else {
        commandLine 'ng', 'build', '--prod'
    }
}

// 'gradle war' creates lang.war file in ./build/libs
//war {
//    from "${angularDir}/dist"
//}

// build back and front
task fullBuild(type:GradleBuild){
    dependsOn buildAngular
    tasks = [ 'war' ]
}

// deploy back
task deployBackToTomcat(type: Copy) {
    from zipTree(war.archivePath)
    into "${tomcatHome}/webapps/${servContext}"
}

// deploy front
task deployFrontToTomcat(type: Copy) {
    finalizedBy "copyIndexHtml"
    from "${angularDir}/dist"
    into "${tomcatHome}/webapps/${webContext}"
    exclude "**/index.html"
}
task cleanFrontDir(type: Delete) {
    delete fileTree(dir: "${tomcatHome}/webapps/${webContext}")
}
deployFrontToTomcat.dependsOn cleanFrontDir

task copyIndexHtml(type: Copy) {
    from "${angularDir}/dist/index.html"
    into "${tomcatHome}/webapps/${webContext}"
    filter { line -> line.replaceAll('<base href="/">', '<base href=".">') }
}
